# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build
      run: ./gradlew build

  Unit-Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Unit Tests
      run: ./gradlew test

  JavadocGen:
    needs: Unit-Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Generating Javadoc
      run: ./gradlew javadoc
    - name: Archive documentation
      uses: actions/upload-artifact@v3
      with:
        name: JavadocHTML
        path: app/build/docs/javadoc

  CodeAnalysis:
    needs: Unit-Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Unit Tests
      run: ./gradlew test
    - name: Creating report
      run: ./gradlew jacocoTestReport
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: JacocoReport
        path: app/build/jacocoHtml
    - name: Coverage Verification
      run: ./gradlew JacocoCoverageVerification

  release:
    name: "Publish new release"
    needs: Unit-Test
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: "Build"
      run: ./gradlew build

    - name: "Get Version"
      id: version
      run: |
        echo "VERSION=Automatic release: $(date +"%Y/%m/%d %H:%M:%S")" >> $GITHUB_OUTPUT

    - name: "Get uuid"
      id: uuid
      run: echo "UUID=$(uuidgen)" >> $GITHUB_OUTPUT


    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{steps.uuid.outputs.UUID}}"
        prerelease: false
        title: "${{steps.version.outputs.VERSION}}"
        files: |
          README.md
          LICENSE
          app/build/distributions/ELME.*